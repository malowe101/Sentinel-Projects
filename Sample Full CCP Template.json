{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workspace-location": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    }
  },
  "variables": {
    "solutionId": "azuresentinel.azure-sentinel-solution-ciscomeraki-internal-preview",
    "_solutionId": "[variables('solutionId')]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "uiConfigId1": "CiscoMerakiInternal1",
    "_uiConfigId1": "[variables('uiConfigId1')]",
    "dataConnectorContentId1": "CiscoMerakiInternal1",
    "_dataConnectorContentId1": "[variables('dataConnectorContentId1')]",
    "dataConnectorId1": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectorDefinitions', variables('_dataConnectorContentId1'))]",
    "_dataConnectorId1": "[variables('dataConnectorId1')]",
    "dataConnectorTemplateSpecName1": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId1')))]",
    "dataConnectorVersion1": "1.0.0",
    "dataConnectorContentId2": "CiscoMerakiInternal2",
    "_dataConnectorContentId2": "[variables('dataConnectorContentId2')]",
    "dataConnectorId2": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId2'))]",
    "_dataConnectorId2": "[variables('dataConnectorId2')]",
    "dataConnectorTemplateSpecName2": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId2')))]",
    "dataConnectorVersion2": "1.0.0",
    "logAnalyticsTableId1": "ASimNetworkSessionLogs",
    "logAnalyticsTableId2": "ASimWebSessionLogs",
    "logAnalyticsTableId4": "ASimAuditEventLogs",
    "streamName1": "Custom-CiscoMeraki_IDS",
    "streamName3": "Custom-CiscoMeraki_API",
    "streamName5": "Custom-CiscoMeraki_Configuration",
    "dataCollectionRuleId": "CiscoMerakiStandard",
    "resourceGroupName": "[resourceGroup().name]",
    "location": "[resourceGroup().location]",
    "subscription": "[last(split(subscription().id, '/'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('dataConnectorTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "DataConnector"
      },
      "properties": {
        "description": "CiscoMerakiInternal data connector with template",
        "displayName": "CiscoMerakiInternal template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('dataConnectorTemplateSpecName1'),'/',variables('dataConnectorVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('dataConnectorTemplateSpecName1'))]"
      ],
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "DataConnector"
      },
      "properties": {
        "description": "CiscoMerakiInternal data connector with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
              "apiVersion": "2022-09-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectorDefinitions",
              "location": "[parameters('workspace-location')]",
              "kind": "Customizable",
              "properties": {
                "connectorUiConfig": {
                  "id": "[variables('_uiConfigId1')]",
                  "title": "Cisco Meraki (using REST API)",
                  "publisher": "Microsoft",
                  "descriptionMarkdown": "The [Cisco Meraki](https://aka.ms/ciscomeraki) connector allows you to easily connect your Cisco Meraki organization events (Security events, Configuration Changes and API Requests) to Microsoft Sentinel. The data connector uses the [Cisco Meraki REST API](https://developer.cisco.com/meraki/api-v1/#!get-organization-appliance-security-events) to fetch logs and supports DCR-based [ingestion time transformations](https://docs.microsoft.com/azure/azure-monitor/logs/custom-logs-overview) that parses the received data and ingests into a ASIM and custom tables in your Log Analytics workspace. This data connector benefits from capabilities such as DCR based ingestion-time filtering, data normalization.\n\n **Supported ASIM schema:** \n 1. Network Session \n 2. Web Session",
                  "graphQueriesTableName": "ASimNetworkSessionLogs",
                  "graphQueries": [
                    {
                      "metricName": "Total IDS alerts received",
                      "legend": "IDS Alerts",
                      "baseQuery": "{{graphQueriesTableName}} | where EventProduct == \"Meraki\" and EventVendor == \"Cisco\""
                    },
                    {
                      "metricName": "Total API request events received",
                      "legend": "Get API Request",
                      "baseQuery": "ASimWebSessionLogs | where EventProduct == \"Meraki\" and EventVendor == \"Cisco\""
                    },
                    {
                      "metricName": "Total Configuration Changes received",
                      "legend": "Get Configuration Changes",
                      "baseQuery": "ASimAuditEventLogs | where EventProduct == \"Meraki\" and EventVendor == \"Cisco\""
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "Get Sample of Cisco Meraki Security Events",
                      "query": "{{graphQueriesTableName}}\n | take 10"
                    },
                    {
                      "description": "Total Events by Event Type",
                      "query": "{{graphQueriesTableName}}\n | summarize count() by EventOriginalType"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "{{graphQueriesTableName}}",
                      "lastDataReceivedQuery": "{{graphQueriesTableName}}\n       | where TimeGenerated > ago(7d)    | where EventProduct == \"Meraki\" and EventVendor == \"Cisco\"                | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "ASimWebSessionLogs",
                      "lastDataReceivedQuery": "ASimWebSessionLogs\n       | where TimeGenerated > ago(7d)    | where EventProduct == \"Meraki\" and EventVendor == \"Cisco\"                | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "ASimAuditEventLogs",
                      "lastDataReceivedQuery": "ASimAuditEventLogs\n       | where TimeGenerated > ago(7d)    | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriteria": [
                    {
                      "type": "HasDataConnectors"
                    }
                  ],
                  "availability": {
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "Read and Write permissions are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "write": true,
                          "read": true,
                          "delete": true
                        }
                      },
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                        "permissionsDisplayText": "Read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key)",
                        "providerDisplayName": "Keys",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "action": true
                        }
                      }
                    ],
                    "customs": [
                      {
                        "name": "Cisco Meraki REST API Key",
                        "description": "Enable API access in Cisco Meraki and generate API Key. Please refer to Cisco Meraki official [documentation](https://aka.ms/ciscomerakiapikey) for more information."
                      },
                      {
                        "name": "Cisco Meraki Organization Id",
                        "description": "Obtain your Cisco Meraki organization id to fetch security events. Follow the steps in the [documentation](https://aka.ms/ciscomerakifindorg) to obtain the Organization Id using the Meraki API Key obtained in previous step."
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "description": "Currently, this connector allows to ingest events from the following [Cisco Meraki REST API](https://developer.cisco.com/meraki/api-v1/#!get-organization-appliance-security-events) endpoint: \n 1. [Get Organization Appliance Security Events](https://developer.cisco.com/meraki/api-latest/#!get-organization-appliance-security-events) \n>This connector parses **IDS Alert** events into ASimNetworkSessionLogs Table and **File Scanned** events into ASimWebSessionLogs Table. \n 2. [Get Organization Api Requests](https://developer.cisco.com/meraki/api-latest/#!get-organization-api-requests) \n>This connector parses events into ASimWebSessionLogs Table. \n 3. [Get Organization Configuration Changes](https://developer.cisco.com/meraki/api-latest/#!get-organization-configuration-changes) \n>This connector parses events into a ASimAuditEventLogs Table.",
                      "instructions": [
                        {
                          "type": "Textbox",
                          "parameters": {
                            "label": "Organization Id",
                            "placeholder": "OrganizationId",
                            "type": "text",
                            "name": "organization"
                          }
                        },
                        {
                          "type": "Textbox",
                          "parameters": {
                            "label": "API Key",
                            "placeholder": "ApiKey",
                            "type": "password",
                            "name": "apiKey"
                          }
                        },
                        {
                          "parameters": {
                            "label": "toggle",
                            "name": "toggle"
                          },
                          "type": "ConnectionToggleButton"
                        }
                      ],
                      "title": "Connect Cisco Meraki Security Events to Microsoft Sentinel"
                    }
                  ]
                },
                "connectionsConfig": {
                  "templateSpecName": "[concat('/subscriptions/',variables('subscription'),'/resourceGroups/',variables('resourceGroupName'),'/providers/Microsoft.Resources/templateSpecs/',variables('dataConnectorTemplateSpecName2'))]",
                  "templateSpecVersion": "[variables('dataConnectorVersion2')]"
                }
              }
            },
            {
              "name": "[variables('dataCollectionRuleId')]",
              "apiVersion": "2021-09-01-preview",
              "type": "Microsoft.Insights/dataCollectionRules",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "dataCollectionEndpointId": "[concat('/subscriptions/',variables('subscription'),'/resourceGroups/',variables('resourceGroupName'),'/providers/Microsoft.Insights/dataCollectionEndpoints/',parameters('workspace'))]",
                "streamDeclarations": {
                  "[variables('streamName1')]": {
                    "columns": [
                      {
                        "name": "ts",
                        "type": "datetime",
                        "description": "The time at which the data was generated"
                      },
                      {
                        "name": "eventType",
                        "type": "string",
                        "description": "Event Type of the security event."
                      },
                      {
                        "name": "deviceMac",
                        "type": "string",
                        "description": "MAC address of Device"
                      },
                      {
                        "name": "clientMac",
                        "type": "string",
                        "description": "MAC address of Client"
                      },
                      {
                        "name": "srcIp",
                        "type": "string",
                        "description": "Source IP Address"
                      },
                      {
                        "name": "destIp",
                        "type": "string",
                        "description": "Destination IP Address"
                      },
                      {
                        "name": "protocol",
                        "type": "string",
                        "description": "Protocol used"
                      },
                      {
                        "name": "priority",
                        "type": "string",
                        "description": "Priority of the Security Event"
                      },
                      {
                        "name": "classification",
                        "type": "string",
                        "description": "Classification of the Security Event"
                      },
                      {
                        "name": "blocked",
                        "type": "boolean",
                        "description": "If the action was blocked or not"
                      },
                      {
                        "name": "message",
                        "type": "string",
                        "description": "Security Event message"
                      },
                      {
                        "name": "signature",
                        "type": "string",
                        "description": "Signature used in the action"
                      },
                      {
                        "name": "sigSource",
                        "type": "string",
                        "description": "Source of the signature"
                      },
                      {
                        "name": "ruleId",
                        "type": "string",
                        "description": "RuleId in use"
                      },
                      {
                        "name": "clientName",
                        "type": "string",
                        "description": "Client Machine name"
                      },
                      {
                        "name": "clientIp",
                        "type": "string",
                        "description": "Client IP Address"
                      },
                      {
                        "name": "uri",
                        "type": "string",
                        "description": "URI of the compromised entity"
                      },
                      {
                        "name": "canonicalName",
                        "type": "string",
                        "description": "Canonical Name of the Client Machine"
                      },
                      {
                        "name": "destinationPort",
                        "type": "int",
                        "description": "Destination Port"
                      },
                      {
                        "name": "fileHash",
                        "type": "string",
                        "description": "File Hash of the Scanned File"
                      },
                      {
                        "name": "fileType",
                        "type": "string",
                        "description": "File Type of the Scanned File"
                      },
                      {
                        "name": "fileSizeBytes",
                        "type": "int",
                        "description": "File Size of the Scanned File"
                      },
                      {
                        "name": "disposition",
                        "type": "string",
                        "description": "Disposition of the Scanned File"
                      },
                      {
                        "name": "action",
                        "type": "string",
                        "description": "Action performed"
                      }
                    ]
                  },
                  "[variables('streamName3')]": {
                    "columns": [
                      {
                        "name": "ts",
                        "type": "datetime",
                        "description": "The time at which the data was generated"
                      },
                      {
                        "name": "adminId",
                        "type": "string",
                        "description": "Admin Id of the user"
                      },
                      {
                        "name": "host",
                        "type": "string",
                        "description": "Host name of the URL"
                      },
                      {
                        "name": "method",
                        "type": "string",
                        "description": "Method name of the URL"
                      },
                      {
                        "name": "path",
                        "type": "string",
                        "description": "Path of the URL"
                      },
                      {
                        "name": "queryString",
                        "type": "string",
                        "description": "Query parameters"
                      },
                      {
                        "name": "userAgent",
                        "type": "string",
                        "description": "User Agent of URL"
                      },
                      {
                        "name": "responseCode",
                        "type": "int",
                        "description": "Request code"
                      },
                      {
                        "name": "sourceIp",
                        "type": "string",
                        "description": "Source IP used"
                      },
                      {
                        "name": "version",
                        "type": "int",
                        "description": "Product version"
                      },
                      {
                        "name": "operationId",
                        "type": "string",
                        "description": "Operation Id"
                      }
                    ]
                  },
                  "[variables('streamName5')]": {
                    "columns": [
                      {
                        "name": "ts",
                        "type": "datetime",
                        "description": "Time of configuration change"
                      },
                      {
                        "name": "adminName",
                        "type": "string",
                        "description": "Name of the admin"
                      },
                      {
                        "name": "adminEmail",
                        "type": "string",
                        "description": "Email of the admin"
                      },
                      {
                        "name": "adminId",
                        "type": "string",
                        "description": "Id of the admin"
                      },
                      {
                        "name": "networkName",
                        "type": "string",
                        "description": "Name of the network"
                      },
                      {
                        "name": "networkId",
                        "type": "string",
                        "description": "Id of the network"
                      },
                      {
                        "name": "ssidName",
                        "type": "string",
                        "description": "Name of the SSID"
                      },
                      {
                        "name": "ssidNumber",
                        "type": "string",
                        "description": "Number of the SSID"
                      },
                      {
                        "name": "page",
                        "type": "string",
                        "description": "Page from which configuration was changed"
                      },
                      {
                        "name": "label",
                        "type": "string",
                        "description": "Label of the entity changed"
                      },
                      {
                        "name": "oldValue",
                        "type": "string",
                        "description": "Old value of the configuration"
                      },
                      {
                        "name": "newValue",
                        "type": "string",
                        "description": "New value of the configuration"
                      }
                    ]
                  }
                },
                "destinations": {
                  "logAnalytics": [
                    {
                      "workspaceResourceId": "[variables('workspaceResourceId')]",
                      "name": "clv2ws1"
                    }
                  ]
                },
                "dataFlows": [
                  {
                    "streams": [
                      "[variables('streamName1')]"
                    ],
                    "destinations": [
                      "clv2ws1"
                    ],
                    "transformKql": "source \r\n        | where eventType == \"IDS Alert\" \r\n        | extend srcIpSplit = split(srcIp,':'), dstIpSplit = split(destIp,':')\r\n        | project-rename TimeGenerated = ts, \r\n                EventOriginalType = eventType, \r\n                DvcMacAddr = deviceMac, \r\n                SrcMacAddr = clientMac, \r\n                EventOriginalSeverity = priority, \r\n                EventMessage = message,\r\n                NetworkRuleName = ruleId\r\n        | extend                 \r\n                EventCount = toint(1), \r\n                EventResult = iif(blocked,\"Failure\",\"Success\"),  \r\n                EventProduct = \"Meraki\", \r\n                EventVendor = \"Cisco\", \r\n                Dvc = DvcMacAddr,\r\n                EventType = \"Notable\",\r\n                SrcIpAddr = tostring(srcIpSplit[0]), \r\n                SrcPortNumber = iif(array_length(srcIpSplit) == 2, toint(srcIpSplit[1]), int(null)), \r\n                DstIpAddr = tostring(dstIpSplit[0]), \r\n                DstPortNumber = iff(array_length(dstIpSplit) == 2,toint(dstIpSplit[1]),int(null)), \r\n                NetworkProtocol = case(protocol == \"tcp\/ip\", \"TCP\", \r\n                                       protocol == \"udp\/ip\", \"UDP\",\r\n                                       \"\"), \r\n                EventSeverity = case(EventOriginalSeverity == \"0\", \"High\",\r\n                                EventOriginalSeverity == \"1\", \"Medium\",\r\n                                EventOriginalSeverity == \"2\", \"Low\",\r\n                                EventOriginalSeverity == \"3\", \"Informational\",\r\n                                \"Low\"), \r\n                DvcAction = case(\r\n                                blocked, \"Deny\",\r\n                                \"Allow\"\r\n                                ),\r\n                AdditionalFields = pack(\r\n                                        \"classification\",classification,\r\n                                        \"sigSource\",sigSource,\r\n                                        \"signature\",signature\r\n                                        ),\r\n                EventStartTime = TimeGenerated, \r\n                EventEndTime = TimeGenerated\r\n        | extend \r\n                GeoLocationSrc = geo_location(SrcIpAddr),\r\n                GeoLocationDst = geo_location(DstIpAddr)\r\n        | extend SrcGeoCountry = tostring(GeoLocationSrc.Country),\r\n                SrcGeoLatitude = toreal(GeoLocationSrc.Latitude),\r\n                SrcGeoLongitude = toreal(GeoLocationSrc.Longitude),\r\n                DstGeoCountry = tostring(GeoLocationDst.Country),\r\n                DstGeoLatitude = toreal(GeoLocationDst.Latitude),\r\n                DstGeoLongitude = toreal(GeoLocationDst.Longitude)\r\n| project-away GeoLocationSrc, GeoLocationDst, srcIpSplit, dstIpSplit, blocked, classification, destIp, protocol, sigSource, srcIp",
                    "outputStream": "[concat('Microsoft-', variables('logAnalyticsTableId1'))]"
                  },
                  {
                    "streams": [
                      "[variables('streamName1')]"
                    ],
                    "destinations": [
                      "clv2ws1"
                    ],
                    "transformKql": "source \r\n  | where eventType == \"File Scanned\" \r\n  | project-rename \r\n          TimeGenerated = ts,\r\n          EventOriginalType = eventType,\r\n          SrcHostname = clientName,\r\n          SrcMacAddr = clientMac, \r\n          DstIpAddr = destIp,\r\n          NetworkApplicationProtocol = protocol,\r\n          Url = uri,  \r\n          FileSHA256 = fileHash, \r\n          FileContentType = fileType, \r\n          FileSize = fileSizeBytes,\r\n          EventOriginalSeverity = disposition,\r\n          DvcOriginalAction = action\r\n  | extend  \r\n          EventCount = toint(1),\r\n          EventResult = \"NA\",\r\n          EventResultDetails = \"NA\",\r\n          EventSchemaVersion = \"0.2.5\",\r\n          EventProduct = \"Meraki\",\r\n          EventVendor = \"Cisco\",\r\n          SrcIpAddr = iff(isnotempty(srcIp),srcIp,clientIp),\r\n          EventSeverity = case(EventOriginalSeverity == \"Malicious\", \"High\",\r\n                              EventOriginalSeverity == \"Clean\", \"Informational\", \r\n                              \"Low\"),\r\n          DvcAction = case(\r\n                            DvcOriginalAction == \"Blocked\", \"Deny\",\r\n                            \"Allow\"\r\n                          ), \r\n          FileHashType = \"SHA256\",\r\n          DstPortNumber = toint(destinationPort),\r\n          AdditionalFields = pack(\r\n                                \"canonicalName\",canonicalName\r\n                                )\r\n      | extend \r\n          EventStartTime = TimeGenerated, \r\n          EventEndTime = TimeGenerated,\r\n          GeoLocationSrc = geo_location(SrcIpAddr),\r\n          GeoLocationDst = geo_location(DstIpAddr)\r\n      | extend SrcGeoCountry = tostring(GeoLocationSrc.Country),\r\n              SrcGeoLatitude = toreal(GeoLocationSrc.Latitude),\r\n              SrcGeoLongitude = toreal(GeoLocationSrc.Longitude),\r\n              DstGeoCountry = tostring(GeoLocationDst.Country),\r\n              DstGeoLatitude = toreal(GeoLocationDst.Latitude),\r\n              DstGeoLongitude = toreal(GeoLocationDst.Longitude)\r\n      | project-away GeoLocationSrc, GeoLocationDst, clientIp, destinationPort, srcIp, blocked, canonicalName",
                    "outputStream": "[concat('Microsoft-', variables('logAnalyticsTableId2'))]"
                  },
                  {
                    "streams": [
                      "[variables('streamName3')]"
                    ],
                    "destinations": [
                      "clv2ws1"
                    ],
                    "transformKql": "source\r\n| extend \r\n            TimeGenerated = ts,\r\n            EventStartTime = ts,\r\n            EventEndTime = ts,\r\n            EventCount = toint(1),\r\n            EventResult = case(responseCode >= 200 and responseCode <= 299, \"Success\",\r\n                                \"Failure\"),\r\n            EventResultDetails = tostring(responseCode),\r\n            EventOriginalResultDetails = operationId,\r\n            EventProduct = \"Meraki\", \r\n            EventVendor = \"Cisco\",\r\n            Dvc = \"Meraki\",\r\n            EventType = \"HTTPsession\",\r\n            EventSchemaVersion = \"0.2.5\",  \r\n            EventOriginalType = \"API Request\",         \r\n            Url = strcat(host,path,'?',queryString),   \r\n            HttpVersion = \"2.0\",\r\n            HttpRequestMethod = method, \r\n            HttpStatusCode = tostring(responseCode),\r\n            HttpReferrer = host,\r\n            HttpUserAgent = userAgent,\r\n            SrcUserId = adminId,\r\n            SrcUserIdType = \"UID\",\r\n            SrcIpAddr = sourceIp,\r\n            EventProductVersion = case(isempty(version),tostring(1),\r\n                                        tostring(version)),\r\n            GeoLocation = geo_location(sourceIp)\r\n| extend UrlOriginal = Url,\r\n            UserAgent = HttpUserAgent,\r\n            EventSeverity = case(EventResult == \"Success\", \"Informational\",\r\n                              \"Low\"),\r\n            SrcGeoCountry = tostring(GeoLocation.Country),\r\n            SrcGeoLatitude = toreal(GeoLocation.Latitude),\r\n            SrcGeoLongitude = toreal(GeoLocation.Longitude)\r\n| project-away GeoLocation",
                    "outputStream": "[concat('Microsoft-', variables('logAnalyticsTableId2'))]"
                  },
                  {
                    "streams": [
                      "[variables('streamName5')]"
                    ],
                    "destinations": [
                      "clv2ws1"
                    ],
                    "transformKql": "source\r\n    | project-rename TimeGenerated = ts,\r\n                 OldValue = oldValue,\r\n                 NewValue = newValue,\r\n                 ActorUsername = adminEmail,\r\n                 ActorUserId = adminId\r\n    | extend EventSchemaVersion = \"0.1\",\r\n          EventCount = toint(1),\r\n          EventResult = \"Success\",\r\n          EventProduct = \"Meraki\",\r\n          EventVendor = \"Cisco\",\r\n          EventSeverity = \"Informational\",\r\n          ActorUsernameType = \"UPN\",\r\n          ActorUserType = \"Admin\",\r\n          ActorUserIdType = \"Other\",\r\n          AdditionalFields = pack(\"adminName\",adminName),\r\n          Operation = strcat(page,'\/',label),\r\n          Object = iff(isnotempty(ssidName), strcat(networkName,'\/',ssidName), networkName),\r\n          ObjectId = iff(isnotempty(ssidNumber), strcat(networkId,'\/',ssidNumber), networkId),\r\n          ObjectType = \"Other\",\r\n          EventType = case(isempty(OldValue),\"Create\",\r\n                           isempty(NewValue),\"Delete\",\r\n                           \"Set\"),\r\n          EventStartTime = TimeGenerated,\r\n          EventEndTime = TimeGenerated,\r\n          ValueType = \"Other\"\r\n    | project-away page, label, networkId, networkName, ssidNumber, ssidName, adminName\r\n",
                    "outputStream": "[concat('Microsoft-', variables('logAnalyticsTableId4'))]"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectorDefinitions', variables('_dataConnectorContentId1'))]",
                "contentId": "[variables('_dataConnectorContentId1')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "CiscoMerakiInternalTest",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Better Mobile Security Inc"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                },
                "dependencies": {
                  "criteria": [
                    {
                      "kind": "DataConnector",
                      "contentId": "[variables('_dataConnectorContentId2')]",
                      "version": "[variables('dataConnectorVersion2')]"
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
      "apiVersion": "2022-09-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectorDefinitions",
      "location": "[parameters('workspace-location')]",
      "kind": "Customizable",
      "properties": {
        "connectorUiConfig": {
          "id": "[variables('_uiConfigId1')]",
          "title": "Cisco Meraki (using REST API)",
          "publisher": "Microsoft",
          "descriptionMarkdown": "The [Cisco Meraki](https://aka.ms/ciscomeraki) connector allows you to easily connect your Cisco Meraki organization events (Security events, Configuration Changes and API Requests) to Microsoft Sentinel. The data connector uses the [Cisco Meraki REST API](https://developer.cisco.com/meraki/api-v1/#!get-organization-appliance-security-events) to fetch logs and supports DCR-based [ingestion time transformations](https://docs.microsoft.com/azure/azure-monitor/logs/custom-logs-overview) that parses the received data and ingests into a ASIM and custom tables in your Log Analytics workspace. This data connector benefits from capabilities such as DCR based ingestion-time filtering, data normalization.\n\n **Supported ASIM schema:** \n 1. Network Session \n 2. Web Session",
          "graphQueriesTableName": "ASimNetworkSessionLogs",
          "graphQueries": [
            {
              "metricName": "Total IDS alerts received",
              "legend": "IDS Alerts",
              "baseQuery": "{{graphQueriesTableName}} | where EventProduct == \"Meraki\" and EventVendor == \"Cisco\""
            },
            {
              "metricName": "Total API request events received",
              "legend": "Get API Request",
              "baseQuery": "ASimWebSessionLogs | where EventProduct == \"Meraki\" and EventVendor == \"Cisco\""
            },
            {
              "metricName": "Total Configuration Changes received",
              "legend": "Get Configuration Changes",
              "baseQuery": "ASimAuditEventLogs | where EventProduct == \"Meraki\" and EventVendor == \"Cisco\""
            }
          ],
          "sampleQueries": [
            {
              "description": "Get Sample of Cisco Meraki Security Events",
              "query": "{{graphQueriesTableName}}\n | take 10"
            },
            {
              "description": "Total Events by Event Type",
              "query": "{{graphQueriesTableName}}\n | summarize count() by EventOriginalType"
            }
          ],
          "dataTypes": [
            {
              "name": "{{graphQueriesTableName}}",
              "lastDataReceivedQuery": "{{graphQueriesTableName}}\n       | where TimeGenerated > ago(7d)    | where EventProduct == \"Meraki\" and EventVendor == \"Cisco\"                | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "ASimWebSessionLogs",
              "lastDataReceivedQuery": "ASimWebSessionLogs\n       | where TimeGenerated > ago(7d)    | where EventProduct == \"Meraki\" and EventVendor == \"Cisco\"                | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "ASimAuditEventLogs",
              "lastDataReceivedQuery": "ASimAuditEventLogs\n       | where TimeGenerated > ago(7d)    | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            }
          ],
          "connectivityCriteria": [
            {
              "type": "HasDataConnectors"
            }
          ],
          "availability": {
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "Read and Write permissions are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "write": true,
                  "read": true,
                  "delete": true
                }
              },
              {
                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                "permissionsDisplayText": "Read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key)",
                "providerDisplayName": "Keys",
                "scope": "Workspace",
                "requiredPermissions": {
                  "action": true
                }
              }
            ],
            "customs": [
              {
                "name": "Cisco Meraki REST API Key",
                "description": "Enable API access in Cisco Meraki and generate API Key. Please refer to Cisco Meraki official [documentation](https://aka.ms/ciscomerakiapikey) for more information."
              },
              {
                "name": "Cisco Meraki Organization Id",
                "description": "Obtain your Cisco Meraki organization id to fetch security events. Follow the steps in the [documentation](https://aka.ms/ciscomerakifindorg) to obtain the Organization Id using the Meraki API Key obtained in previous step."
              }
            ]
          },
          "instructionSteps": [
            {
              "description": "Currently, this connector allows to ingest events from the following [Cisco Meraki REST API](https://developer.cisco.com/meraki/api-v1/#!get-organization-appliance-security-events) endpoint: \n 1. [Get Organization Appliance Security Events](https://developer.cisco.com/meraki/api-latest/#!get-organization-appliance-security-events) \n>This connector parses **IDS Alert** events into ASimNetworkSessionLogs Table and **File Scanned** events into ASimWebSessionLogs Table. \n 2. [Get Organization Api Requests](https://developer.cisco.com/meraki/api-latest/#!get-organization-api-requests) \n>This connector parses events into ASimWebSessionLogs Table. \n 3. [Get Organization Configuration Changes](https://developer.cisco.com/meraki/api-latest/#!get-organization-configuration-changes) \n>This connector parses events into a ASimAuditEventLogs Table.",
              "instructions": [
                {
                  "type": "Textbox",
                  "parameters": {
                    "label": "Organization Id",
                    "placeholder": "OrganizationId",
                    "type": "text",
                    "name": "organization"
                  }
                },
                {
                  "type": "Textbox",
                  "parameters": {
                    "label": "API Key",
                    "placeholder": "ApiKey",
                    "type": "password",
                    "name": "apiKey"
                  }
                },
                {
                  "parameters": {
                    "label": "toggle",
                    "name": "toggle"
                  },
                  "type": "ConnectionToggleButton"
                }
              ],
              "title": "Connect Cisco Meraki organization events to Microsoft Sentinel"
            }
          ]
        },
        "connectionsConfig": {
          "templateSpecName": "[concat('/subscriptions/',variables('subscription'),'/resourceGroups/',variables('resourceGroupName'),'/providers/Microsoft.Resources/templateSpecs/',variables('dataConnectorTemplateSpecName2'))]",
          "templateSpecVersion": "[variables('dataConnectorVersion2')]"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectorDefinitions', variables('_dataConnectorContentId1'))]",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorVersion1')]",
        "source": {
          "kind": "Solution",
          "name": "CiscoMerakiInternalTest",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Better Mobile Security Inc"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "criteria": [
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentId2')]",
              "version": "[variables('dataConnectorVersion2')]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('dataConnectorTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "ResourcesDataConnector"
      },
      "properties": {
        "description": "CiscoMerakiInternal data connector with template",
        "displayName": "CiscoMerakiInternal template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('dataConnectorTemplateSpecName2'),'/',variables('dataConnectorVersion2'))]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('dataConnectorTemplateSpecName2'))]"
      ],
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "ResourcesDataConnector"
      },
      "properties": {
        "description": "CiscoMerakiInternal data connector with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorVersion2')]",
          "parameters": {
            "apiKey": {
              "defaultValue": "apiKey",
              "type": "string",
              "minLength": 1,
              "metadata": {
                "description": "api Key"
              }
            },
            "organization": {
              "defaultValue": "organization",
              "type": "string",
              "minLength": 1,
              "metadata": {
                "description": "organization"
              }
            },
            "connectorDefinitionName": {
              "defaultValue": "connectorDefinitionName",
              "type": "string",
              "minLength": 1,
              "metadata": {
                "description": "connectorDefinitionName"
              }
            },
            "workspace": {
              "defaultValue": "[parameters('workspace')]",
              "type": "string"
            },
            "dcrConfig": {
              "type": "object",
              "defaultValue": {
                "dataCollectionEndpoint": "data collection Endpoint",
                "dataCollectionRuleImmutableId": "data collection rule immutableId"
              }
            }
          },
          "variables": {
            "_dataConnectorContentId2": "[variables('_dataConnectorContentId2')]",
            "_dataConnectorEventsId1": "[['idsalerts']",
            "_dataConnectorEventsId3": "[['apirequest']",
            "_dataConnectorEventsId5": "[['config']"
          },
          "resources": [
            {
              "name": "[[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorEventsId1'))]",
              "apiVersion": "2021-10-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "RestApiPoller",
              "properties": {
                "connectorDefinitionName": "[[parameters('connectorDefinitionName')]",
                "dcrConfig": {
                  "streamName": "[variables('streamName1')]",
                  "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
                  "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]"
                },
                "dataType": "[variables('logAnalyticsTableId1')]",
                "auth": {
                  "type": "APIKey",
                  "ApiKey": "[[parameters('apiKey')]",
                  "ApiKeyName": "X-Cisco-Meraki-API-Key"
                },
                "request": {
                  "apiEndpoint": "[[concat('https://contentutilityapi.azurewebsites.net/api/MockApi/GetResponse','/CiscoMeraki/security')]",
                  "rateLimitQPS": 2,
                  "queryWindowInMin": 5,
                  "httpMethod": "GET",
                  "queryTimeFormat": "UnixTimestamp",
                  "startTimeAttributeName": "t0",
                  "endTimeAttributeName": "t1",
                  "queryParameters": { "perPage": 1000 },
                  "retryCount": 3,
                  "timeoutInSeconds": 60,
                  "headers": {
                    "Accept": "application/json",
                    "User-Agent": "Scuba"
                  }
                },
                "paging": {
                  "pagingType": "LinkHeader"
                },
                "response": {
                  "eventsJsonPaths": [
                    "$"
                  ]
                }
              }
            },
            {
              "name": "[[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorEventsId3'))]",
              "apiVersion": "2021-10-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "RestApiPoller",
              "properties": {
                "connectorDefinitionName": "[[parameters('connectorDefinitionName')]",
                "dcrConfig": {
                  "streamName": "[variables('streamName3')]",
                  "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
                  "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]"
                },
                "dataType": "[variables('logAnalyticsTableId2')]",
                "auth": {
                  "type": "APIKey",
                  "ApiKey": "[[parameters('apiKey')]",
                  "ApiKeyName": "X-Cisco-Meraki-API-Key"
                },
                "request": {
                  "apiEndpoint": "[[concat('https://contentutilityapi.azurewebsites.net/api/MockApi/GetResponse','/CiscoMeraki/apirequest')]",
                  "rateLimitQPS": 2,
                  "queryWindowInMin": 5,
                  "httpMethod": "GET",
                  "queryTimeFormat": "UnixTimestamp",
                  "startTimeAttributeName": "t0",
                  "endTimeAttributeName": "t1",
                  "queryParameters": { "perPage": 1000 },
                  "retryCount": 3,
                  "timeoutInSeconds": 60,
                  "headers": {
                    "Accept": "application/json",
                    "User-Agent": "Scuba"
                  }
                },
                "paging": {
                  "pagingType": "LinkHeader"
                },
                "response": {
                  "eventsJsonPaths": [
                    "$"
                  ]
                }
              }
            },
            {
              "name": "[[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorEventsId5'))]",
              "apiVersion": "2021-10-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "RestApiPoller",
              "properties": {
                "connectorDefinitionName": "[[parameters('connectorDefinitionName')]",
                "dcrConfig": {
                  "streamName": "[variables('streamName5')]",
                  "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
                  "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]"
                },
                "dataType": "[variables('logAnalyticsTableId4')]",
                "auth": {
                  "type": "APIKey",
                  "ApiKey": "[[parameters('apiKey')]",
                  "ApiKeyName": "X-Cisco-Meraki-API-Key"
                },
                "request": {
                  "apiEndpoint": "[[concat('https://contentutilityapi.azurewebsites.net/api/MockApi/GetResponse','/CiscoMeraki/config')]",
                  "rateLimitQPS": 2,
                  "queryWindowInMin": 5,
                  "httpMethod": "GET",
                  "queryTimeFormat": "UnixTimestamp",
                  "startTimeAttributeName": "t0",
                  "endTimeAttributeName": "t1",
                  "queryParameters": { "perPage": 1000 },
                  "retryCount": 3,
                  "timeoutInSeconds": 60,
                  "headers": {
                    "Accept": "application/json",
                    "User-Agent": "Scuba"
                  }
                },
                "paging": {
                  "pagingType": "LinkHeader"
                },
                "response": {
                  "eventsJsonPaths": [
                    "$"
                  ]
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId2'),'/'))))]",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectorDefinitions', variables('_dataConnectorContentId2'))]",
                "contentId": "[variables('_dataConnectorContentId2')]",
                "kind": "ResourcesDataConnector",
                "version": "[variables('dataConnectorVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "CiscoMerakiInternalTest",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Better Mobile Security Inc"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "2.0.0",
        "kind": "Solution",
        "contentSchemaVersion": "2.0.0",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "CiscoMeraki",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "support@microsoft.com"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentId1')]",
              "version": "[variables('dataConnectorVersion1')]"
            }
          ]
        },
        "firstPublishDate": "2023-01-18",
        "providers": [
          "Cisco"
        ],
        "categories": {
          "domains": [
            "Security - Network"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspace": {
            "type": "String"
        },
     "analytic-id": {
        "type": "string",
        "defaultValue": "928ebd34-99c9-43f9-bc8e-a0bbd1368fa4",
        "minLength": 1,
        "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    }
    },
"resources": [
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-10-01",
            "properties": {
                "displayName": "Exchange SSRF Autodiscover ProxyShell - Detection",
                "description": "This query looks for suspicious request patterns to Exchange servers that fit patterns recentlyblogged about by PeterJson. This exploitation chain utilises an SSRF vulnerability in Exchangewhich eventually allows the attacker to execute arbitrary Powershell on the server. In the examplepowershell can be used to write an email to disk with an encoded attachment containing a shell.Reference: https://peterjson.medium.com/reproducing-the-proxyshell-pwn2own-exploit-49743a4ea9a1",
                "severity": "High",
                "enabled": true,
                "query": "let successCodes = dynamic([200, 302, 401]);\rW3CIISLog\r| where scStatus has_any (successCodes)\r| where ipv4_is_private(cIP) == False\r| where csUriStem hasprefix '/autodiscover/autodiscover.json'\r| project TimeGenerated, cIP, sIP, sSiteName, csUriStem, csUriQuery, Computer, csUserName, _ResourceId, FileUri\r| where (csUriQuery !has 'Protocol' and isnotempty(csUriQuery))\ror (csUriQuery has_any('/mapi/', 'powershell'))\ror (csUriQuery contains '@' and csUriQuery matches regex @'\.[a-zA-Z]{2,4}?(?:[a-zA-Z]{2,4}\/)')\ror (csUriQuery contains ':' and csUriQuery matches regex @'\:[0-9]{2,4}\/')\r| extend timestamp = TimeGenerated, HostCustomEntity = Computer, IPCustomEntity = cIP, AccountCustomEntity = csUserName, ResourceCustomEntity = _ResourceId, FileCustomEntity = FileUri",
                "queryFrequency": "PT12H",
                "queryPeriod": "PT12H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "entityMappings": [{"entityType":"Account","fieldMappings":[{"identifier":"FullName","columnName":"AccountCustomEntity"}]},{"entityType":"Host","fieldMappings":[{"identifier":"FullName","columnName":"HostCustomEntity"}]},{"entityType":"IP","fieldMappings":[{"identifier":"Address","columnName":"IPCustomEntity"}]},{"entityType":"AzureResource","fieldMappings":[{"identifier":"ResourceId","columnName":"ResourceCustomEntity"}]}],
                "tactics": ["InitialAccess"],
                "alertRuleTemplateName": "968358d6-6af8-49bb-aaa4-187b3067fb95", 
                "incidentConfiguration": {
                    "createIncident": true, 
                    "groupingConfiguration": {
                        "enabled": false, 
                    "reopenClosedIncident": false,
                    "lookbackDuration": "PT5H",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": []
                     }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                   }
               }
           }
    ]
}
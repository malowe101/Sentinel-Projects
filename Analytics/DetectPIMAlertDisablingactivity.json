{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{"analytic-id":{"defaultValue":"fb7ca1c9-e14c-40a3-856e-28f3c14ea1ba","metadata":{"description":"Unique id for the scheduled alert rule"},"minLength":1,"type":"string"},"workspace":{"type":"String"}},"resources":[{"apiVersion":"2021-10-01","kind":"Scheduled","name":"[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic-id'))]","properties":{"alertRuleTemplateName":"fb7ca1c9-e14c-40a3-856e-28f3c14ea1ba","description":"This query detects when there is a spike in Azure AD Seamless SSO errors. They may not be caused by a Password Spray attack, but the cause of the errors might need to be investigated.Azure AD only logs the requests that matched existing accounts, thus there might have been unlogged requests for non-existing accounts.","displayName":"Password spray attack against Azure AD Seamless SSO","enabled":"true","incidentConfiguration":{"createIncident":"true","groupingConfiguration":{"enabled":"false","groupByEntities":[],"lookbackDuration":"PT5M","matchingMethod":"AllEntities","reopenClosedIncident":"false"}},"query":"let account_threshold = 5;\nAADNonInteractiveUserSignInLogs\n//| where ResultType == '81016'\n| where ResultType startswith '81'\n| summarize DistinctAccounts = dcount(UserPrincipalName), DistinctAddresses = make_set(IPAddress) by ResultType\n| where DistinctAccounts > account_threshold\n| mv-expand IPAddress = DistinctAddresses\n| extend IPAddress = tostring(IPAddress)\n| join kind=leftouter (union isfuzzy=true SigninLogs, AADNonInteractiveUserSignInLogs) on IPAddress\n| summarize\n    StartTime = min(TimeGenerated),\n    EndTime = max(TimeGenerated),\n    UserPrincipalName = make_set(UserPrincipalName),\n    UserAgent = make_set(UserAgent),\n    ResultDescription = take_any(ResultDescription),\n    ResultSignature = take_any(ResultSignature)\n    by IPAddress, Type, ResultType\n| project Type, StartTime, EndTime, IPAddress, ResultType, ResultDescription, ResultSignature, UserPrincipalName, UserAgent = iff(array_length(UserAgent) == 1, UserAgent[0], UserAgent)","queryFrequency":"PT1H","queryPeriod":"PT1H","severity":"Medium","suppressionDuration":"PT5H","suppressionEnabled":"false","tactics":null,"triggerOperator":"GreaterThan","triggerThreshold":0},"type":"Microsoft.OperationalInsights/workspaces/providers/alertRules"}]}
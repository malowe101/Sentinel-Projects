{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{"analytic-id":{"defaultValue":"d0f6eedd-b507-40ae-899f-ea59bace264e","metadata":{"description":"Unique id for the scheduled alert rule"},"minLength":1,"type":"string"},"workspace":{"type":"String"}},"resources":[{"apiVersion":"2021-10-01","kind":"Scheduled","name":"[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic-id'))]","properties":{"alertRuleTemplateName":"a3c144f9-8051-47d4-ac29-ffb0c312c910","description":"Identifies SolarWinds SUNBURST and SUPERNOVA backdoor file hash IOCs in DeviceFileEventsReferences:- https://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html- https://gist.github.com/olafhartong/71ffdd4cab4b6acd5cbcd1a0691ff82f","displayName":"SUNBURST and SUPERNOVA backdoor hashes","enabled":"true","entityMappings":[{"entityType":"Account","fieldMappings":[{"identifier":"FullName","columnName":"AccountCustomEntity"}]},{"entityType":"Host","fieldMappings":[{"identifier":"FullName","columnName":"HostCustomEntity"}]},{"entityType":"FileHash","fieldMappings":[{"identifier":"Algorithm","columnName":"AlgorithmCustomEntity"},{"identifier":"Value","columnName":"FileHashCustomEntity"}]}],"eventGroupingSettings":{"aggregationKind":"SingleAlert"},"incidentConfiguration":{"createIncident":"true","groupingConfiguration":{"enabled":"false","groupByEntities":[],"lookbackDuration":"PT5H","matchingMethod":"AllEntities","reopenClosedIncident":"false"}},"query":"let SunburstMD5=dynamic(['b91ce2fa41029f6955bff20079468448','02af7cec58b9a5da1c542b5a32151ba1','2c4a910a1299cdae2a4e55988a2f102e','846e27a652a5e1bfbd0ddd38a16dc865','4f2eb62fa529c0283b28d05ddd311fae']);let SupernovaMD5='56ceb6d0011d87b6e4d7023d7ef85676';DeviceFileEvents| where MD5 in(SunburstMD5) or MD5 in(SupernovaMD5)| extend    timestamp = TimeGenerated,    AccountCustomEntity = iff(isnotempty(InitiatingProcessAccountUpn), InitiatingProcessAccountUpn, InitiatingProcessAccountName),    HostCustomEntity = DeviceName,    AlgorithmCustomEntity = 'MD5',    FileHashCustomEntity = MD5","queryFrequency":"P1D","queryPeriod":"P1D","severity":"High","suppressionDuration":"PT5H","suppressionEnabled":"false","tactics":["Execution","Persistence","InitialAccess"],"triggerOperator":"GreaterThan","triggerThreshold":0},"type":"Microsoft.OperationalInsights/workspaces/providers/alertRules"}]}
{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{"analytic-id":{"defaultValue":"1ff56009-db01-4615-8211-d4fda21da02d","metadata":{"description":"Unique id for the scheduled alert rule"},"minLength":1,"type":"string"},"workspace":{"type":"String"}},"resources":[{"apiVersion":"2021-10-01","kind":"Scheduled","name":"[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic-id'))]","properties":{"alertRuleTemplateName":"1ff56009-db01-4615-8211-d4fda21da02d","description":"Identifies when the Microsoft Graph RoleManagement.ReadWrite.Directory (Delegated or Application) permission is granted to a service principal.This permission allows an application to read and manage the role-based access control (RBAC) settings for your company's directory.An adversary could use this permission to add an Azure AD object to an Admin directory role and escalate privileges.Ref : https://docs.microsoft.com/graph/permissions-reference#role-management-permissionsRef : https://docs.microsoft.com/graph/api/directoryrole-post-members?view=graph-rest-1.0&tabs=http","displayName":"Azure AD Role Management Permission Grant","enabled":"true","incidentConfiguration":{"createIncident":"true","groupingConfiguration":{"enabled":"false","groupByEntities":[],"lookbackDuration":"PT5M","matchingMethod":"AllEntities","reopenClosedIncident":"false"}},"query":"AuditLogs\n| where LoggedByService =~ 'Core Directory'\n| where Category =~ 'ApplicationManagement'\n| where AADOperationType =~ 'Assign'\n| where ActivityDisplayName has_any ('Add delegated permission grant','Add app role assignment to service principal')\n| mv-expand TargetResources\n| mv-expand TargetResources.modifiedProperties\n| extend displayName_ = tostring(TargetResources_modifiedProperties.displayName)\n| where displayName_ has_any ('AppRole.Value','DelegatedPermissionGrant.Scope')\n| extend Permission = tostring(parse_json(tostring(TargetResources_modifiedProperties.newValue)))\n| where Permission has 'RoleManagement.ReadWrite.Directory'\n| extend InitiatingApp = tostring(parse_json(tostring(InitiatedBy.app)).displayName)\n| extend Initiator = iif(isnotempty(InitiatingApp), InitiatingApp, tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName))\n| extend Target = tostring(parse_json(tostring(TargetResources.modifiedProperties[4].newValue)))\n| extend TargetId = iif(displayName_ =~ 'DelegatedPermissionGrant.Scope',\n  tostring(parse_json(tostring(TargetResources.modifiedProperties[2].newValue))),\n  tostring(parse_json(tostring(TargetResources.modifiedProperties[3].newValue))))\n| summarize by bin(TimeGenerated, 1h), OperationName, Initiator, Target, TargetId, Result","queryFrequency":"PT2H","queryPeriod":"PT2H","severity":"High","suppressionDuration":"PT5H","suppressionEnabled":"false","tactics":null,"triggerOperator":"GreaterThan","triggerThreshold":0},"type":"Microsoft.OperationalInsights/workspaces/providers/alertRules"}]}
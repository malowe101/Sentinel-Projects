{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{"analytic-id":{"defaultValue":"02ef8d7e-fc3a-4d86-a457-650fa571d8d2","metadata":{"description":"Unique id for the scheduled alert rule"},"minLength":1,"type":"string"},"workspace":{"type":"String"}},"resources":[{"apiVersion":"2021-10-01","kind":"Scheduled","name":"[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic-id'))]","properties":{"alertRuleTemplateName":"02ef8d7e-fc3a-4d86-a457-650fa571d8d2","description":"Identifies when a user account successfully logs onto an Azure App from one IP and within 10 mins failed to logon to the same App via a different IP.This may indicate a malicious attempt at password guessing based on knowledge of the users account.","displayName":"Successful logon from IP and failure from a different IP","enabled":"true","incidentConfiguration":{"createIncident":"true","groupingConfiguration":{"enabled":"false","groupByEntities":[],"lookbackDuration":"PT5M","matchingMethod":"AllEntities","reopenClosedIncident":"false"}},"query":"let logonDiff = 10m;\nlet aadFunc = (tableName:string){\ntable(tableName) \n| where ResultType == '0' \n| where AppDisplayName !in ('Office 365 Exchange Online', 'Skype for Business Online')\n| project SuccessLogonTime = TimeGenerated, UserPrincipalName, SuccessIPAddress = IPAddress, AppDisplayName, SuccessIPBlock = strcat(split(IPAddress, '.')[0], '.', split(IPAddress, '.')[1]), Type\n| join kind= inner (\n    table(tableName)\n    | where ResultType !in ('0', '50140') \n    | where ResultDescription !~ 'Other'  \n    | where AppDisplayName !in ('Office 365 Exchange Online', 'Skype for Business Online')\n    | project FailedLogonTime = TimeGenerated, UserPrincipalName, FailedIPAddress = IPAddress, AppDisplayName, ResultType, ResultDescription, Type\n) on UserPrincipalName, AppDisplayName \n| where SuccessLogonTime < FailedLogonTime and FailedLogonTime - SuccessLogonTime <= logonDiff and FailedIPAddress !startswith SuccessIPBlock\n| summarize FailedLogonTime = max(FailedLogonTime), SuccessLogonTime = max(SuccessLogonTime) by UserPrincipalName, SuccessIPAddress, AppDisplayName, FailedIPAddress, ResultType, ResultDescription, Type\n| extend timestamp = SuccessLogonTime\n};\nlet aadSignin = aadFunc('SigninLogs');\nlet aadNonInt = aadFunc('AADNonInteractiveUserSignInLogs');\nunion isfuzzy=true aadSignin, aadNonInt","queryFrequency":"P1D","queryPeriod":"P1D","severity":"Medium","suppressionDuration":"PT5H","suppressionEnabled":"false","tactics":null,"triggerOperator":"GreaterThan","triggerThreshold":0},"type":"Microsoft.OperationalInsights/workspaces/providers/alertRules"}]}